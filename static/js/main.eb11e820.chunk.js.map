{"version":3,"sources":["assets/images/logosaving.jpeg","assets/images/Selfsovereign.png","assets/images/Secure.png","assets/images/Simple.png","assets/images/Smart.png","assets/images/Stable.png","screen/views/HomeScreen/HomeScreen.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","HomeScreen","react_default","a","createElement","Container","fluid","style","contentCenter","isMobile","height","width","marginTop","src","require","paddingTop","hrStyle","Row","Col","md","divBtnOpenApp","Button","btnOpenApp","className","Component","color","backgroundColor","textAlign","position","bottom","overflow","Boolean","window","location","hostname","match","BitHyveWalletWeb","BrowserRouter","Switch","Route","path","component","exact","ReactDOM","render","HomeScreen_HomeScreen","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.eb11e820.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logosaving.0dc6f952.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/Selfsovereign.79b8399a.png\";","module.exports = __webpack_public_path__ + \"static/media/Secure.c6a8514a.png\";","module.exports = __webpack_public_path__ + \"static/media/Simple.9342b9eb.png\";","module.exports = __webpack_public_path__ + \"static/media/Smart.f6e0b3c9.png\";","module.exports = __webpack_public_path__ + \"static/media/Stable.9e6eab3a.png\";","import React, { Component } from \"react\";\nimport { Button, Container, Row, Col } from \"reactstrap\";\nimport {\n  BrowserView,\n  MobileView,\n  isBrowser,\n  isMobile\n} from \"react-device-detect\";\n\nexport default class HomeScreen extends Component {\n  render() {\n    return (\n      <Container fluid>\n        <div>\n          <div style={contentCenter}>\n            <h1>SOUND MONEY. SIMPLIFIED</h1>\n            <span>ENABLED BY A P2P NETWORK OF NON-CUSTODIAL WALLETS</span>\n          </div>\n          <div style={contentCenter}>\n            <img\n              style={\n                isMobile\n                  ? { height: 150, width: \"90%\", marginTop: 20 }\n                  : { height: 410, width: \"90%\", marginTop: 20 }\n              }\n              src={require(\"../../../assets/images/logosaving.jpeg\")}\n            />\n          </div>\n          <div>\n            <h4 style={{ paddingTop: 40 }}>MOBILE WALLET FEATURES</h4>\n            <hr style={hrStyle} />\n            <Row>\n              <Col md=\"6\" style={contentCenter}>\n                <img\n                  style={\n                    isMobile ? { height: 150, width: \"100%\" } : { height: 200 }\n                  }\n                  src={require(\"../../../assets/images/Selfsovereign.png\")}\n                />\n              </Col>\n              <Col md=\"6\">\n                <h3>Self-sovereign</h3>\n                <h5>\n                  BitHyve is a software provider and not a financial services\n                  company. Our wallets are non-custodial and a user always has\n                  the control of her keys\n                </h5>\n                <h5>\n                  Our architecture ensures that we can not monitor, censor or\n                  have control of users funds at any time\n                </h5>\n                <h5>\n                  'Friends & Family' network or peer trust is used to add\n                  resilience\n                </h5>\n              </Col>\n            </Row>\n            <br />\n          </div>\n          <div>\n            <Row>\n              <Col md=\"6\">\n                <h3>Secure</h3>\n                <h5>\n                  Latest app security measures for our iOS and Android bitcoin\n                  wallet apps\n                </h5>\n                <h5>\n                  Users have the option of protecting their funds further by\n                  using 2FA authentication for transactions and/ or 2 of 3\n                  multi-sig technology for recovering funds\n                </h5>\n                <h5>\n                  Support for HSM to protect the keys not stored on the app\n                </h5>\n              </Col>\n              <Col md=\"6\" style={contentCenter}>\n                <img\n                  style={\n                    isMobile ? { height: 150, width: \"100%\" } : { height: 200 }\n                  }\n                  src={require(\"../../../assets/images/Secure.png\")}\n                />\n              </Col>\n            </Row>\n            <br />\n          </div>\n          <div>\n            <Row>\n              <Col md=\"6\" style={contentCenter}>\n                <img\n                  style={\n                    isMobile ? { height: 150, width: \"100%\" } : { height: 200 }\n                  }\n                  src={require(\"../../../assets/images/Simple.png\")}\n                />\n              </Col>\n              <Col md=\"6\">\n                <h3>Simple</h3>\n                <h5>\n                  Familiar account based UI for managing different address\n                  groups as with banks and other financial service companies\n                </h5>\n                <h5>\n                  On-boarding and help screens for ongoing education of the user\n                </h5>\n                <h5>Sending money to friends using in-app address book</h5>\n              </Col>\n            </Row>\n            <br />\n          </div>\n\n          <div>\n            <Row>\n              <Col md=\"6\">\n                <h3>Smart</h3>\n                <h5>\n                  Secure P2P wallet communication ensures the ability to have\n                  contracts between bitcoin wallets\n                </h5>\n                <h5>\n                  Create joint accounts, add time lock to your accounts or lend\n                  money to a friend, all with just a few clicks\n                </h5>\n              </Col>\n              <Col md=\"6\" style={contentCenter}>\n                <img\n                  style={\n                    isMobile ? { height: 150, width: \"100%\" } : { height: 200 }\n                  }\n                  src={require(\"../../../assets/images/Smart.png\")}\n                />\n              </Col>\n            </Row>\n            <br />\n          </div>\n\n          <div>\n            <Row>\n              <Col md=\"6\" style={contentCenter}>\n                <img\n                  style={\n                    isMobile ? { height: 150, width: \"100%\" } : { height: 200 }\n                  }\n                  src={require(\"../../../assets/images/Stable.png\")}\n                />\n              </Col>\n              <Col md=\"6\">\n                <h3>Stable</h3>\n                <h5>An in-app mechanism to peg your funds to any currency</h5>\n                <h5>\n                  Trust-less way to ensure the value of your funds even if\n                  BitHyve vanishes from the face of the earth as all\n                  transactions are secured on the blockchain\n                </h5>\n                <h5>\n                  Receive salary and pay invoices as you would do in a normal\n                  bank account{\" \"}\n                </h5>\n              </Col>\n            </Row>\n            <br />\n          </div>\n        </div>\n        <div style={divBtnOpenApp}>\n          <Button style={btnOpenApp} className=\"btn btn-success\">\n            Open App{\" \"}\n          </Button>\n        </div>\n      </Container>\n    );\n  }\n}\n\nconst hrStyle = {\n  color: \"#000\",\n  backgroundColor: \"#000\",\n  height: 1\n} as React.CSSProperties;\n\nconst contentCenter = {\n  textAlign: \"center\"\n} as React.CSSProperties;\n\nconst divBtnOpenApp = {\n  textAlign: \"center\",\n  position: \"sticky\",\n  bottom: 10,\n  overflow: \"auto\"\n} as React.CSSProperties;\n\nconst btnOpenApp = {} as React.CSSProperties;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport HomeScreen from \"./screen/views/HomeScreen/HomeScreen\";\n\nimport { HashRouter, Switch, Route, BrowserRouter } from \"react-router-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nexport default class BitHyveWalletWeb extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <Switch>\n          <Route path=\"/login\" component={HomeScreen} exact />\n          <Route path=\"/\" component={HomeScreen} />\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n\nReactDOM.render(<HomeScreen />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}